{
	"Python Function": {
		"prefix": "pdef",
		"body": [
			"def ${1:function_name}(${2:args}):",
			"    \"\"\"${3:Docstring}\"\"\"",
			"    ${4:pass}"
		],
		"description": "Create a Python function with docstring"
	},


	"Python Class": {
		"prefix": "pclass",
		"body": [
			"class ${1:ClassName}:",
			"    def __init__(self, ${2:args}):",
			"        ${3:pass}",
			"",
			"    def __str__(self):",
			"        return f\"<${1:ClassName}>\""
		],
		"description": "Create a Python class with __init__ and __str__ methods"
	},


	"If __name__ == __main__": {
		"prefix": "main",
		"body": [
			"if __name__ == \"__main__\":",
			"    ${1:main()}  # Call main function or other code"
		],
		"description": "Add if __name__ == '__main__' statement"
	},


	"Try Except Block": {
		"prefix": "try",
		"body": [
			"try:",
			"    ${1:pass}  # Code that might raise an exception",
			"except ${2:Exception} as e:",
			"    print(f\"Error: {e}\")"
		],
		"description": "Add a try-except block"
	},


	"List Comprehension": {
		"prefix": "listcomp",
		"body": [
			"[${1:expression} for ${2:item} in ${3:iterable}]"
		],
		"description": "Create a list comprehension"
	},


	"For Loop": {
		"prefix": "for",
		"body": [
			"for ${1:item} in ${2:iterable}:",
			"    ${3:pass}"
		],
		"description": "Create a for loop"
	},


	"Dict Comprehension": {
		"prefix": "dictcomp",
		"body": [
			"{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:iterable}}"
		],
		"description": "Create a dictionary comprehension"
	},


	"With Open File": {
		"prefix": "withopen",
		"body": [
			"with open('${1:filename}', '${2:mode}', encoding='utf-8') as ${3:f}:",
			"    ${4:pass}"
		],
		"description": "Open a file safely using with statement"
	}
}
